{
    "file_name": "CustomerMaintenance",
    "package": "com.example.customers",
    "content": "package com.example.customers;\n\nimport java.io.RandomAccessFile;\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class CustomerMaintenance {\n\n    private static final String CUSTOMER_FILE = \"custfile.dat\";\n    private static final int RECORD_LENGTH = 100;\n\n    public static void main(String[] args) {\n        try (Scanner scanner = new Scanner(System.in)) {\n            System.out.println(\"Customer Maintenance Application\");\n            System.out.println(\"Enter 'X' to exit.\");\n            \n            boolean running = true;\n            while (running) {\n                System.out.print(\"Enter Customer ID: \");\n                String customerId = scanner.next().toUpperCase();\n                \n                if (customerId.equals(\"X\")) {\n                    running = false;\n                    continue;\n                }\n                \n                try {\n                    Customer customer = readCustomer(customerId);\n                    displayCustomer(customerId, customer);\n                } catch (IOException e) {\n                    System.out.println(\"Error reading customer record: \" + e.getMessage());\n                }\n            }\n        }\n    }\n\n    private static Customer readCustomer(String customerId) throws IOException {\n        try (RandomAccessFile file = new RandomAccessFile(CUSTOMER_FILE, \"r\")) {\n            int recordNumber = Integer.parseInt(customerId) - 1;\n            long byteOffset = recordNumber * RECORD_LENGTH;\n            file.seek(byteOffset);\n            byte[] record = new byte[RECORD_LENGTH];\n            file.readFully(record);\n            return parseCustomerRecord(record);\n        }\n    }\n\n    private static Customer parseCustomerRecord(byte[] record) {\n        Customer customer = new Customer();\n        \n        // Parse customer ID\n        String id = new String(record, 0, 6).trim();\n        customer.setId(id);\n\n        // Parse customer name\n        String name = new String(record, 6, 20).trim();\n        customer.setName(name);\n\n        // Parse address\n        String address = new String(record, 26, 20).trim();\n        customer.setAddress(address);\n\n        // Parse city\n        String city = new String(record, 46, 15).trim();\n        customer.setCity(city);\n\n        return customer;\n    }\n\n    private static void displayCustomer(String customerId, Customer customer) {\n        System.out.println(\"\\nCustomer Information:\");\n        System.out.println(\"Customer ID: \" + customerId);\n        System.out.println(\"Name: \" + customer.getName());\n        System.out.println(\"Address: \" + customer.getAddress());\n        System.out.println(\"City: \" + customer.getCity());\n    }\n\n    private static class Customer {\n        private String id;\n        private String name;\n        private String address;\n        private String city;\n\n        // Getters and Setters\n        public String getId() { return id; }\n        public void setId(String id) { this.id = id; }\n        public String getName() { return name; }\n        public void setName(String name) { this.name = name; }\n        public String getAddress() { return address; }\n        public void setAddress(String address) { this.address = address; }\n        public String getCity() { return city; }\n        public void setCity(String city) { this.city = city; }\n    }\n}\n",
    "description": "A Java class that maintains customer records, allowing users to retrieve and display customer information by customer ID."
}